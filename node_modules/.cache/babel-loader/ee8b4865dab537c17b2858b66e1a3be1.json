{"ast":null,"code":"var _jsxFileName = \"/Users/Programming/Programming Hero/Projects for learning/ema-john-simple/src/components/Shop/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport fakeData from '../../fakeData';\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\nimport Cart from '../Cart/Cart';\nimport Product from '../Product/Product';\nimport './Shop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  _s();\n\n  const first10 = fakeData.slice(0, 10); // console.log(fakeData);\n\n  let [products, setProducts] = useState(first10); // console.log(first10);\n\n  let [cart, setCart] = useState([]);\n  useEffect(() => {\n    let savedCart = getDatabaseCart();\n    let productKeys = Object.keys(savedCart);\n    let cartsProduct = productKeys.map(key => {\n      let product = fakeData.find(item => item.key === key);\n      product.quantity = savedCart[key];\n      return product;\n    });\n    setCart(cartsProduct);\n  }, []);\n\n  let handleCartButton = product => {\n    // console.log('im clicked', product);\n    // ... means previous initial cart \n    let toBeAdded = product.key;\n    let sameProduct = cart.find(item => item.key === toBeAdded); // console.log(sameProduct, 'same Product');\n\n    let count = 1;\n    let newCart;\n\n    if (sameProduct) {\n      count = sameProduct.quantity + 1;\n      sameProduct.quantity = count;\n      let others = cart.filter(pd => pd.key !== toBeAdded);\n      newCart = [...others, sameProduct];\n    } else {\n      product.quantity = 1;\n      newCart = [...cart, product];\n    }\n\n    setCart(newCart);\n    addToDatabaseCart(product.key, count);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This is shop component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: products.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), products.map(data => /*#__PURE__*/_jsxDEV(Product, {\n        showAddToCart: true,\n        handleCartButton: handleCartButton,\n        product: data\n      }, data.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: /*#__PURE__*/_jsxDEV(Cart, {\n        cart: cart,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/review\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Review Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"miCWF+gXl9/Qj8oVUKzvxcX6U90=\");\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/Users/Programming/Programming Hero/Projects for learning/ema-john-simple/src/components/Shop/Shop.js"],"names":["React","useEffect","useState","fakeData","addToDatabaseCart","getDatabaseCart","Cart","Product","Shop","first10","slice","products","setProducts","cart","setCart","savedCart","productKeys","Object","keys","cartsProduct","map","key","product","find","item","quantity","handleCartButton","toBeAdded","sameProduct","count","newCart","others","filter","pd","length","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fakeData from '../../fakeData'\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\nimport Cart from '../Cart/Cart';\nimport Product from '../Product/Product';\nimport './Shop.css'\n\nconst Shop = () => {\n    const first10 = fakeData.slice(0,10)\n    // console.log(fakeData);\n   let [products, setProducts] =  useState(first10)\n    // console.log(first10);\n    let [cart, setCart] = useState([])\n    \n    useEffect(()=>{\n        let savedCart = getDatabaseCart()\n        let productKeys = Object.keys(savedCart)\n        let cartsProduct = productKeys.map(key =>{\n            let product = fakeData.find(item => item.key === key)\n            product.quantity = savedCart[key]\n            return product\n        })\n        setCart(cartsProduct)\n        \n    },[])\n    \n    let handleCartButton= (product)=>{\n        // console.log('im clicked', product);\n        // ... means previous initial cart \n        let toBeAdded = product.key\n        let sameProduct = cart.find(item => item.key === toBeAdded)\n        // console.log(sameProduct, 'same Product');\n        let count = 1\n        let newCart\n        if(sameProduct){\n             count = sameProduct.quantity + 1\n             sameProduct.quantity = count\n             let others = cart.filter(pd => pd.key !== toBeAdded )\n             newCart = [...others, sameProduct]\n        }\n        else{\n            product.quantity = 1\n            newCart = [...cart, product]\n        }\n        \n        setCart(newCart)\n        \n        addToDatabaseCart(product.key, count)\n    }\n    \n    return (\n        <div className = 'shop-container'>\n            <div className=\"product-container\">\n            <h1>This is shop component</h1>\n            <h3>{products.length}</h3>\n    \n            {\n            products.map(data => <Product key = {data.key} showAddToCart = {true} handleCartButton = {handleCartButton} product = {data}></Product>)\n           \n            \n            }\n          \n            </div>\n            <div className=\"cart-container\">\n                <Cart cart = {cart}>\n                <Link to = '/review'><button>Review Order</button></Link>\n                </Cart>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}
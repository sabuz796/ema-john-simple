{"ast":null,"code":"var _jsxFileName = \"/Users/Programming/Programming Hero/Projects for learning/ema-john-simple/src/components/Review/Review.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport fakeData from '../../fakeData';\nimport { getDatabaseCart } from '../../utilities/databaseManager';\nimport ReviewItem from '../ReviewItem/ReviewItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Review = () => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n\n  let removeProduct = productKey => {\n    console.log('remove hoise');\n    let newCart = cart.filter(item => item.key !== productKey);\n    setCart(newCart);\n  };\n\n  useEffect(() => {\n    let savedCart = getDatabaseCart();\n    let productKeys = Object.keys(savedCart);\n    let cartsProduct = productKeys.map(key => {\n      let product = fakeData.find(item => item.key === key);\n      product.quantity = savedCart[key];\n      return product;\n    });\n    setCart(cartsProduct);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"This is cart review: \", cart.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), cart.map(pd => /*#__PURE__*/_jsxDEV(ReviewItem, {\n      removeProduct: removeProduct,\n      product: pd\n    }, pd.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Review, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n\n_c = Review;\nexport default Review;\n\nvar _c;\n\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"sources":["/Users/Programming/Programming Hero/Projects for learning/ema-john-simple/src/components/Review/Review.js"],"names":["React","useEffect","useState","fakeData","getDatabaseCart","ReviewItem","Review","cart","setCart","removeProduct","productKey","console","log","newCart","filter","item","key","savedCart","productKeys","Object","keys","cartsProduct","map","product","find","quantity","length","pd"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AACA,MAAIO,aAAa,GAAIC,UAAD,IAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIC,OAAO,GAAGN,IAAI,CAACO,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaN,UAAjC,CAAd;AACAF,IAAAA,OAAO,CAACK,OAAD,CAAP;AACH,GAJD;;AAKAZ,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIgB,SAAS,GAAGb,eAAe,EAA/B;AACA,QAAIc,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,SAAZ,CAAlB;AACA,QAAII,YAAY,GAAGH,WAAW,CAACI,GAAZ,CAAgBN,GAAG,IAAG;AACrC,UAAIO,OAAO,GAAGpB,QAAQ,CAACqB,IAAT,CAAcT,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaA,GAAnC,CAAd;AACAO,MAAAA,OAAO,CAACE,QAAR,GAAmBR,SAAS,CAACD,GAAD,CAA5B;AACA,aAAOO,OAAP;AACH,KAJkB,CAAnB;AAKAf,IAAAA,OAAO,CAACa,YAAD,CAAP;AAEH,GAVQ,EAUP,EAVO,CAAT;AAWA,sBACI;AAAA,4BACI;AAAA,0CAA0Bd,IAAI,CAACmB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQnB,IAAI,CAACe,GAAL,CAASK,EAAE,iBACN,QAAC,UAAD;AAAY,MAAA,aAAa,EAAIlB,aAA7B;AACe,MAAA,OAAO,EAAIkB;AAD1B,OACOA,EAAE,CAACX,GADV;AAAA;AAAA;AAAA;AAAA,YADL,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA5BD;;GAAMV,M;;KAAAA,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fakeData from '../../fakeData';\nimport { getDatabaseCart } from '../../utilities/databaseManager';\nimport ReviewItem from '../ReviewItem/ReviewItem';\n\nconst Review = () => {\n    const [cart, setCart] = useState([])\n    let removeProduct = (productKey)=>{\n        console.log('remove hoise');\n        let newCart = cart.filter(item => item.key !== productKey)\n        setCart(newCart);\n    }\n    useEffect(()=>{\n        let savedCart = getDatabaseCart()\n        let productKeys = Object.keys(savedCart)\n        let cartsProduct = productKeys.map(key =>{\n            let product = fakeData.find(item => item.key === key)\n            product.quantity = savedCart[key]\n            return product\n        })\n        setCart(cartsProduct)\n        \n    },[])\n    return (\n        <div>\n            <h1>This is cart review: {cart.length}</h1>\n            {\n                cart.map(pd =>\n                     <ReviewItem removeProduct = {removeProduct} \n                     key = {pd.key }product = {pd} ></ReviewItem>)\n            }\n        </div>\n    );\n};\n\nexport default Review;"]},"metadata":{},"sourceType":"module"}
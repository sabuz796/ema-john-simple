{"ast":null,"code":"const getUser = () => {\n  const existingUser = localStorage.getItem('userId');\n\n  if (existingUser) {\n    return existingUser;\n  } else {\n    const newUser = 'user-' + new Date().getTime();\n    localStorage.setItem('userId', newUser);\n    return newUser;\n  }\n};\n\nconst getDataKey = () => {\n  const userId = getUser();\n  return `emaJohn/carts/${userId}`;\n}; // push to local storage: a temporary place for database\n\n\nconst getDatabaseCart = () => {\n  const dataKey = getDataKey();\n  const data = localStorage.getItem(dataKey) || \"{}\";\n  return JSON.parse(data);\n};\n\nconst addToDatabaseCart = (key, count) => {\n  const currentCart = getDatabaseCart();\n  currentCart[key] = count;\n  localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n};\n\nconst removeFromDatabaseCart = key => {\n  const currentCart = getDatabaseCart();\n  delete currentCart[key];\n  localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n};\n\nconst clearLocalShoppingCart = cart => {\n  localStorage.removeItem(getDataKey());\n};\n\nexport { addToDatabaseCart, getDatabaseCart, removeFromDatabaseCart, clearLocalShoppingCart }; // polyfill to support older browser\n\nconst localStorage = window.localStorage || (() => {\n  let store = {};\n  return {\n    getItem(key) {\n      return store[key];\n    },\n\n    setItem(key, value) {\n      store[key] = value.toString();\n    },\n\n    clear() {\n      store = {};\n    }\n\n  };\n})(); // end of poly fill","map":{"version":3,"sources":["/Users/Programming/Programming Hero/Projects for learning/ema-john-simple/src/utilities/databaseManager.js"],"names":["getUser","existingUser","localStorage","getItem","newUser","Date","getTime","setItem","getDataKey","userId","getDatabaseCart","dataKey","data","JSON","parse","addToDatabaseCart","key","count","currentCart","stringify","removeFromDatabaseCart","clearLocalShoppingCart","cart","removeItem","window","store","value","toString","clear"],"mappings":"AAAA,MAAMA,OAAO,GAAG,MAAM;AAClB,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB;;AACA,MAAIF,YAAJ,EAAkB;AACd,WAAOA,YAAP;AACH,GAFD,MAEO;AACH,UAAMG,OAAO,GAAG,UAAU,IAAIC,IAAJ,GAAWC,OAAX,EAA1B;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,QAArB,EAA+BH,OAA/B;AACA,WAAOA,OAAP;AACH;AACJ,CATD;;AAYA,MAAMI,UAAU,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGT,OAAO,EAAtB;AACA,SAAQ,iBAAgBS,MAAO,EAA/B;AACH,CAHD,C,CAKA;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC1B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAMI,IAAI,GAAGV,YAAY,CAACC,OAAb,CAAqBQ,OAArB,KAAiC,IAA9C;AACA,SAAOE,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACH,CAJD;;AAMA,MAAMG,iBAAiB,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACtC,QAAMC,WAAW,GAAGR,eAAe,EAAnC;AACAQ,EAAAA,WAAW,CAACF,GAAD,CAAX,GAAmBC,KAAnB;AACAf,EAAAA,YAAY,CAACK,OAAb,CAAqBC,UAAU,EAA/B,EAAmCK,IAAI,CAACM,SAAL,CAAeD,WAAf,CAAnC;AACH,CAJD;;AAMA,MAAME,sBAAsB,GAAGJ,GAAG,IAAI;AAClC,QAAME,WAAW,GAAGR,eAAe,EAAnC;AACA,SAAOQ,WAAW,CAACF,GAAD,CAAlB;AACAd,EAAAA,YAAY,CAACK,OAAb,CAAqBC,UAAU,EAA/B,EAAmCK,IAAI,CAACM,SAAL,CAAeD,WAAf,CAAnC;AACH,CAJD;;AAMA,MAAMG,sBAAsB,GAAIC,IAAD,IAAU;AACrCpB,EAAAA,YAAY,CAACqB,UAAb,CAAwBf,UAAU,EAAlC;AACH,CAFD;;AAKA,SAASO,iBAAT,EAA4BL,eAA5B,EAA6CU,sBAA7C,EAAqEC,sBAArE,G,CAGA;;AACA,MAAMnB,YAAY,GAAGsB,MAAM,CAACtB,YAAP,IAAuB,CAAC,MAAM;AACjD,MAAIuB,KAAK,GAAG,EAAZ;AACA,SAAO;AACLtB,IAAAA,OAAO,CAACa,GAAD,EAAM;AACX,aAAOS,KAAK,CAACT,GAAD,CAAZ;AACD,KAHI;;AAILT,IAAAA,OAAO,CAACS,GAAD,EAAMU,KAAN,EAAa;AAClBD,MAAAA,KAAK,CAACT,GAAD,CAAL,GAAaU,KAAK,CAACC,QAAN,EAAb;AACD,KANI;;AAOLC,IAAAA,KAAK,GAAG;AACNH,MAAAA,KAAK,GAAG,EAAR;AACD;;AATI,GAAP;AAWD,CAb2C,GAA5C,C,CAeA","sourcesContent":["const getUser = () => {\n    const existingUser = localStorage.getItem('userId');\n    if (existingUser) {\n        return existingUser; \n    } else {\n        const newUser = 'user-' + new Date().getTime();\n        localStorage.setItem('userId', newUser)\n        return newUser;\n    }\n}\n\n\nconst getDataKey = () => {\n    const userId = getUser();\n    return `emaJohn/carts/${userId}`\n}\n\n// push to local storage: a temporary place for database\nconst getDatabaseCart = () => {\n    const dataKey = getDataKey();\n    const data = localStorage.getItem(dataKey) || \"{}\";\n    return JSON.parse(data);\n}\n\nconst addToDatabaseCart = (key, count) => {\n    const currentCart = getDatabaseCart();\n    currentCart[key] = count;\n    localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n}\n\nconst removeFromDatabaseCart = key => {\n    const currentCart = getDatabaseCart();\n    delete currentCart[key];\n    localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n}\n\nconst clearLocalShoppingCart = (cart) => {\n    localStorage.removeItem(getDataKey());\n}\n\n\nexport { addToDatabaseCart, getDatabaseCart, removeFromDatabaseCart, clearLocalShoppingCart};\n\n\n// polyfill to support older browser\nconst localStorage = window.localStorage || (() => {\n  let store = {}\n  return {\n    getItem(key) {\n      return store[key]\n    },\n    setItem(key, value) {\n      store[key] = value.toString()\n    },\n    clear() {\n      store = {}\n    }\n  };\n})()\n\n// end of poly fill"]},"metadata":{},"sourceType":"module"}